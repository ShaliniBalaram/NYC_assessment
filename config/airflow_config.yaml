# Airflow Configuration for NYC TLC Data Pipeline

core:
  dags_folder: /opt/airflow/dags
  plugins_folder: /opt/airflow/plugins
  executor: CeleryExecutor
  parallelism: 32
  dag_file_processor_timeout: 600
  max_active_runs_per_dag: 16
  load_examples: false

webserver:
  base_url: http://localhost:8080
  web_server_host: 0.0.0.0
  web_server_port: 8080
  secret_key: your_secret_key_here
  workers: 4
  worker_class: sync
  expose_config: false
  authenticate: true
  auth_backend: airflow.contrib.auth.backends.password_auth

celery:
  broker_url: redis://redis:6379/0
  result_backend: db+postgresql://airflow:airflow@postgres/airflow
  worker_concurrency: 16
  worker_prefetch_multiplier: 1
  task_acks_late: true
  task_default_queue: default
  task_default_exchange: airflow
  task_default_exchange_type: direct
  task_default_routing_key: default
  worker_enable_remote_control: true

scheduler:
  job_heartbeat_sec: 5
  scheduler_heartbeat_sec: 5
  min_file_process_interval: 30
  dag_dir_list_interval: 300
  print_stats_interval: 30
  pool_metrics_interval: 5.0
  scheduler_health_check_threshold: 30
  catchup_by_default: false
  max_tis_per_query: 512

email:
  email_backend: airflow.utils.email.send_email_smtp
  smtp_host: smtp.gmail.com
  smtp_port: 587
  smtp_user: your_email@gmail.com
  smtp_password: your_app_password
  smtp_mail_from: your_email@gmail.com

metrics:
  statsd_on: true
  statsd_host: localhost
  statsd_port: 8125
  statsd_prefix: airflow

logging:
  base_log_folder: /opt/airflow/logs
  remote_logging: true
  remote_base_log_folder: gs://nyc_tlc_data_bucket/airflow_logs
  remote_log_conn_id: google_cloud_default
  logging_level: INFO
  fab_logging_level: WARN
  colored_console_log: true
  colored_log_format: "[%%(blue)s%%(asctime)s%%(reset)s] {%%(blue)s%%(filename)s:%%(reset)s%%(lineno)d} %%(log_color)s%%(levelname)s%%(reset)s - %%(log_color)s%%(message)s%%(reset)s"
  colored_formatter_class: airflow.utils.log.colored_log.CustomTTYColoredFormatter

api:
  auth_backend: airflow.api.auth.backend.basic_auth
  api_client: airflow.api.client.json_client
  access_control_allow_headers: origin,content-type,accept
  access_control_allow_methods: POST,GET,OPTIONS,PUT,DELETE
  access_control_allow_origin: *

kubernetes:
  worker_container_repository: apache/airflow
  worker_container_tag: 2.6.3
  delete_worker_pods: true
  namespace: default
  in_cluster: true
  config_file: /opt/airflow/config/kube_config.yaml
  dags_in_image: false
  delete_worker_pods_on_failure: false
  worker_service_account_name: default
  image_pull_policy: IfNotPresent

dags:
  default_args:
    owner: airflow
    depends_on_past: false
    email: your_email@gmail.com
    email_on_failure: true
    email_on_retry: false
    retries: 1
    retry_delay: 300
    execution_timeout: 3600
    max_active_runs: 1
    concurrency: 16

  tags:
    - nyc_tlc
    - data_pipeline
    - production

connections:
  gcp_connection:
    conn_id: google_cloud_default
    conn_type: google_cloud_platform
    project_id: scenic-flux-441021-t4
    keyfile_path: /opt/airflow/config/service-account.json

  azure_connection:
    conn_id: azure_default
    conn_type: azure
    login: your_client_id
    password: your_client_secret
    extra:
      tenant_id: your_tenant_id
      subscription_id: your_subscription_id

variables:
  environment: production
  project_id: scenic-flux-441021-t4
  bucket_name: nyc_tlc_data_bucket
  dataset_id: nyc_tlc_data
  data_path: /data
  processing_date: "{{ ds }}"
